<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BadgeDao">


  <resultMap type="badge"       id="BadgeMap">
    <id column="bno"            property="no"/>
    <result column="name"       property="name"/>
    <result column="photo"      property="photo"/>
    <result column="content"    property="content"/>
   
    <!-- 
    <association property="tagNo" javaType="tag">
		<result column="tno"      property="tagNo"/>
   	 	<result column="t_name"      property="name"/>
   	 	<result column="t_photo"      property="photo"/>
	    <result column="color"      property="color"/>
    </association>
     -->
<!-- 
    <association property="tno" javaType="tag">
      <id column="tno"          property="no"/>
      <result column="name"     property="name"/>
      <result column="photo"     property="photo"/>
      <result column="color"     property="color"/>
    </association>
 -->
    
  </resultMap>
  
    <sql id="sql1">
	select 
		b.bno, 
		b.name,
        b.photo,
        b.content,
        t.tno,
        t.name,
        t.photo,
        t.color
	from badge b
	inner join tag t on t.tno = b.tno
    <!-- 
    select 
      b.bno, 
      b.name,
      b.photo,  
      b.tno, 
      b.content,
      t.tno
    from 
      badge a
      inner join tag t on b.tno=t.tno
     -->
  </sql>
  <select id="findAll" resultMap="BadgeMap" parameterType="string">
  	<!-- <include refid="sql1"/> -->
    select
      bno,
      name, 
      photo,
      content
    from badge
  	<!-- 
  	<if test="keyword != null">
  	where
  		b.name like concat('%', #{keyword}, '%')
  		or t.name like concat('%', #{keyword}, '%')
  	</if>
  	order by a.bno desc
  	 -->
  </select>
  
  <insert id="insert" parameterType="badge">
    insert into badge(bno,name,photo,content) 
    values(#{no},#{name}, #{photo}, #{content})
  </insert>
  
 
 
  <!-- 
  
  
   <update id="update" parameterType="badge">
    update article
    <set>
      <if test="title != null">title = #{title},</if>
      <if test="content != null">content = #{content},</if>
      
    </set>
    where no = #{no}
  </update>
    
    <select id="findByNo" resultMap="BadgeMap" parameterType="int">
    select 
      b.arno, 
      b.title,
      b.content,
      b.cdt,  
      a.cano,
    from 
      badge a
      inner join user u on a.writer=u.uno   
     where b.bno=#{no}  
    </select>
     

	  <delete id="delete" parameterType="int">
	    delete from badge
	    where no=#{no}
	  </delete>
 -->
</mapper>